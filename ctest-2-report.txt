实验2  流程控制实验
2.1、实验目的
（1）掌握复合语句、if语句、switch语句的使用，熟练掌握for、while、do-while三种基本的循环控制语句的使用，掌握重复循环技术，了解转移语句与标号语句。
（2）练习循环结构for、while、do-while语句的使用。
（3）练习转移语句和标号语句的使用。
（4）使用Turbo C 2.0集成开发环境中的调试功能：单步执行、设置断点、观察变量值。

2.1、实验内容
1．源程序改错题
	下面是计算s=n!的源程序，在这个源程序中存在若干语法和逻辑错误。要求在计算机上对这个例子程序进行调试修改，使之能够正确完成指定任务。例如，8！=40320。
#include <stdio.h>
void main(void)
{ 
int i,n,s=1;
  printf("Please enter n:");
  scanf("%d",n);
  for(i=1,i<=n,i++)
     s=s*i;
  printf("%d! = %d",n,s);
}
解答
（1）错误修改
    1.scanf一行的n改为&n
      改成 scanf("%d",&n);
    2.for循环的内部用；;隔开
      改成for(i=1;i<=n;i++)（
（2）错误修改后运行结果：



2．源程序修改替换题
（1）修改第1题，分别用while和do-while语句替换for语句。
 do-while
#include <stdio.h>
void main(void)
{ 
int i,n,s=1;
  printf("Please enter n:");
  scanf("%d",&n);
  i=1;
  do{  
     s=s*i;
      i++;
}
     while(i<=(n+1))
  printf("%d! = %d",n,s);
}

while
 
#include <stdio.h>
void main(void)
{ 
int i,n,s=1;
  printf("Please enter n:");
  scanf("%d",&n);
  i=1;
  while (i<=n)
  {  i++;
     s=s*i;}
  printf("%d! = %d\n",n,s);
}
（2）修改第1题，输入改为“整数S”，输出改为“满足n！≥S的最小整数n”。例如输入整数40310，输出结果为n=8。

3．编程设计题
（1）打印如下杨辉三角形。
                           1                    /*第0行 */ 
                         1   1                  /*第1行 */
                       1   2   1                /*第2行 */
                     1   3   3   1
                   1   4   6   4   1
                 1   5   10  10  5   1
               1   6   15  20  15  6   1
             1   7   21  35  35  21  7   1
           1   8   28  56  70  56  28  8   1
         1   9   36  84  126 126 84  36   9   1
每个数据值可以由组合计算（表示第i行第j列位置的值），而的计算如下：
				    (i=0,1,2,…)
	(j=0,1,2,3,…,i)
	本程序中为了打印出金字塔效果，要注意空格的数目。一位数之间是3个空格，两位数之间有2个空格，3位数之间只有一个空格，程序编制过程中要注意区分。
 /*杨辉三角*/
#include<stdio.h>
int main(void)
{ int x,r;
  k: 
   scanf("%d",&x);
    if (!(x==0))
    {    r=1;
        for(;x>0;r++,x--)
        { int j,i;
           
           double k;  
            for (i=1;i<=x;i++)
             printf("  "); 
            
            for (j=1,k=1;j<=r;j++)//r-1行第j个
            {
              printf("%4.f",k);
            k*=(r-j);
            k/=j;
          }
            printf("\n");
       }
        goto k;
    }
  else
    return 0;
}

（2）编写一个程序，将用户输入的任意正整数逆转，例如，输入1234，输出4321。
  /*正整数逆转*/
#include<stdio.h>
  int main(void)
{ 
     k: ;
      int i=2;
    char x[1000];  
    x[1]=getchar();
   x[2]=getchar();
    if (x[1]=='0'&(x[2]=='\n'))
      return 0;
   else
    {
           do 
            {
                i++;
                x[i]=getchar();
             }
            while (!(x[i]=='\n'));
               i--;     
            for (;i>0;i--)
            putchar(x[i]);
           printf("\n");
        goto k;
    }
}
 
